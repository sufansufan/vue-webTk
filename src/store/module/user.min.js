import{login,checkLogin,getUserInfo}from"@/api/user";import{TOKEN_KEY,setToken,getToken}from"@/utils/tools";import router from"@/router";import{getParams}from"@/utils/tools";export default{state:{userName:"",userId:"",headUrl:"",authStatus:"",isPxx:"",msgNumber:"",userType:"",roleName:"",access:"",[TOKEN_KEY]:getToken()},mutations:{SET_HEADURL(state,url){state.headUrl=url},SET_USERID(state,id){state.userId=id},SET_USERNAME(state,name){state.userName=name},SET_AUTHSTATUS(state,status){state.authStatus=status},SET_ISPXX(state,status){state.isPxx=status},SET_MSGNUMBER(state,num){state.msgNumber=num},SET_USERTYPE(state,type){state.userType=type},SET_ROLENAME(state,name){state.roleName=name},SET_ACCESS(state,access){state.access=access},SET_TOKEN(state,token){state[TOKEN_KEY]=token,setToken(token)}},actions:{LOGIN_CHECK:({commit:commit},{loginNameOrUserPhone:loginNameOrUserPhone,password:password})=>new Promise((resolve,reject)=>{login({loginNameOrUserPhone:loginNameOrUserPhone,password:password}).then(res=>{const data=res.data;resolve(data.authSignature)}).catch(err=>{reject(err)})}).then(data=>new Promise((resolve,reject)=>{checkLogin({key:data}).then(res=>{const data=res.data;commit("SET_TOKEN",data.token);let fullPath=getParams("redirect");fullPath=fullPath&&fullPath.replace(/%2F/g,"/"),router.push({path:fullPath||"home"}),resolve(data.token)}).catch(err=>{reject(err)})})),LOGOUT:({commit:commit})=>new Promise(resolve=>{commit("SET_TOKEN",""),resolve()}),GET_USERINFO:({state:state,commit:commit})=>new Promise((resolve,reject)=>{getUserInfo(state.token).then(res=>{const{...info}=res.data.userInfo;commit("SET_HEADURL",info.headUrl),commit("SET_USERID",info.id),commit("SET_USERNAME",info.userName),commit("SET_AUTHSTATUS",info.authStatus),commit("SET_ISPXX",info.isPxx),commit("SET_MSGNUMBER",info.msgNumber),commit("SET_ROLENAME",info.roleName),resolve()}).catch(err=>{reject(err)})})}};